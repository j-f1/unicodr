$header-height: 2.5em;
@mixin font-stack($type) {
  font-family: SF UI $type, San Fransico $type, San Francisco, Helvetica Neue, Helvetica, Segoe UI, sans-serif;
}
@mixin header-shadow() {
  content: '';
  height: 5px;
  background: linear-gradient(to bottom, rgba(204, 204, 204, 0.45), transparent);
  display: block;
  position: fixed;
  width: 100vw;
  left: 0;
}
$header-background: transparentize(#f0f0f0, 0.1);
$header-border: #CCC;

body {
  margin: 0;
  margin-top: $header-height;
  @include font-stack(Text);
  background: white;
  overflow: hidden;
}

.loader {
  position: fixed;
  width: 100%;
  height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  .spinner {
    border: 1em solid black;
    border-left-color: transparent;
    border-radius: 50%;
    width: 10em;
    height: 10em;
    animation: rotate-spinner 1s linear infinite;
  }
  .progress {
    background: gray;
    height: 1em;
  }
}

@keyframes rotate-spinner {
  to {
    transform: rotate(1turn);
  }
}

html:not(.fullscreen) header {
  .window-controls {
    width: 60px;
  }
  .handle {
    width: 5em;
  }
}

header {
  z-index: 1;
  height: $header-height;
  border-bottom: 1px solid $header-border;

  &::after {
    @include header-shadow;
    margin-top: 2.5em;
  }

  background: $header-background;
  position: fixed;
  display: flex;
  align-items: center;
  top: 0;
  width: 100vw;
  padding: 0 1rem;
  box-sizing: border-box;

  .sort {
    &:not(.active) {
      visibility: hidden;
    }
    -webkit-appearance: none;
    border: none;
    padding: 0;
    height: 100%;
    display: flex;
    align-items: center;
    margin: 0 {
      right: 1rem;
    };

    &::before {
      content: '▿';
      margin-bottom: 0.5em;
    }
    &:checked::before {
      content: '▾';
    }
    & + .menu {
      display: none;
      position: absolute;
      margin-left: -2rem;
      top: 2rem;
      background: white;
      padding: 0.5em 1em;
      z-index: 100;
      box-shadow: 2px 2px 8px #CCC;
      &::before {
        content: '';
        border: {
          left:   0.5rem solid transparent;
          right:  0.5rem solid transparent;
          bottom: 0.5rem solid white;
        }
        position: absolute;
        margin-left: -0.8em;
        margin-top: -1em;
      }
    }
    &:checked + .menu {
      display: block;
    }
  }

  .search {
    flex: 1;
    font-size: 1.5em;

    background: transparent;
    border: none;
    -webkit-appearance: none;
    padding: 0;

    &:focus {
      outline: none;
    }
  }
  .results:not(:empty) {
    margin-left: 1rem;
    font-size: 1.25em;
    opacity: 0.25;
    -webkit-user-select: none;
    pointer-events: none;
  }
}

.char {
  @include font-stack(Display);
}

.inline-block {
  display: inline-block;
}

#main {
  position: absolute;
  height: 100vw;
  width: 100vw;
  top: 0;
  z-index: -1;
  .row {
    display: flex;
    .item {
      display: flex;
      flex: 1;
      min-width: 20vw;
      max-width: 20vw;
      height: 20vw;
      align-items: center;
      justify-content: center;
      flex-direction: column;
      position: relative;
      .char {
        cursor: pointer;
        -webkit-user-select: none;
        min-height: 8vw;
        font-size:  8vw;
        font-family: sans-serif;
        width: 100%;
        text-align: center;
        &:hover ~ .note {
          opacity: 1;
        }
      }
      .code {
        margin-top: 1vw;
        font-size: 1vw;
        font-family: monospace;
        pointer-events: none;
        -webkit-user-select: none;
      }
      .name {
        font-size: 1.3vw;
        text-align: center;
      }
      .note {
        background: transparentize(black, 0.5);
        color: white;
        border-radius: 0.75vw;
        padding: 0.5vw;
        width: 50%;
        text-align: center;
        pointer-events: none;
        opacity: 0;
        transition: opacity 0.2s;
        order: -1;
        margin-bottom: -3vw;
        z-index: 1;
        font-size: 1.6vw;
      }
    }
  }
}

.search-results-wrap {
  height: 100vh;
  overflow: auto;
}
.search-results {
  width: 75vw;
  min-width: 500px;
  margin: auto;
  position: relative;
  margin-top: -2.5em;
  .exact-match {
    position: absolute;
    width: 100%;
    z-index: 1;
    top: 2.5em;
    &::before {
      content: '';
      width: 100vw;
      background: $header-background;
      border-bottom: 1px solid #CCC;
      height: 10vw;
      display: block;
      position: fixed;
      z-index: -1;
      left: 0;
    }
    &::after {
      @include header-shadow;
    }
  }
  .item {
    height: 10vw;
    width: 100%;

    display: flex;
    align-items: center;

    &>* {
      &:not(:first-child) {
        margin-left: 0.25em;
      }
      &/*:not(:last-child)*/ {
        margin-right: 0.25em;
      }
    }
    .char {
      font-size: 10vw*(7/8);
      text-align: center;
      width: 1em;
    }
    .code {
      font-family: monospace;

      &::before {
        content: '(';
      }
      &::after {
        content: ')';
      }
    }
    .name {
      flex: 1;
    }
  }
}

.selected {
  background: transparentize(#CCC, 0.5);
  border-radius: .5em;
}

$arrow-size: 0.5em;
$arrow-length: 1.25em;
$in-place-selector: ".btn.in-place";

#{$in-place-selector} {
  font-size: 1em;
  display: inline-flex;
  padding: 0 .125em .125em;
  align-items: center;
  width: 3em;
  height: 3em;
  span {
    margin: auto;
    width: 1em;
    height: 1em;
    display: inline-block;
    border: 0.25em solid currentColor;
    &::before {
      content: '';
      width: 0;
      height: 0;
      border-bottom: $arrow-size solid currentColor;
      border-right: $arrow-size solid transparent;
      position: relative;
      bottom: 1em;
      left: .1em;
    }
    &::after {
      content: '';
      width: $arrow-size / 2;
      height: $arrow-length;
      display: inline-block;
      position: absolute;
      background: currentColor;
      transform: rotate(45deg) translate3d(-0.5em, 0.775em - $arrow-length, 0);
      border-left:  0.2em solid;
      border-right: 0.2em solid;
    }
  }
}
#{$in-place-selector} span::after {
  border-color: #999;
}
#{$in-place-selector}:hover span::after {
  border-color: #888;
}
#{$in-place-selector}:active span::after,
#{$in-place-selector}:focus span::after{
  border-color: #777;
}
